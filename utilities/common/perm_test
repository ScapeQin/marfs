#!/bin/bash
#
# Copyright (c) 2015, Los Alamos National Security, LLC
# All rights reserved.
# 
# Copyright 2015.  Los Alamos National Security, LLC. This software was produced
# under U.S. Government contract DE-AC52-06NA25396 for Los Alamos National
# Laboratory (LANL), which is operated by Los Alamos National Security, LLC for
# the U.S. Department of Energy. The U.S. Government has rights to use, reproduce,
# and distribute this software.  NEITHER THE GOVERNMENT NOR LOS ALAMOS NATIONAL
# SECURITY, LLC MAKES ANY WARRANTY, EXPRESS OR IMPLIED, OR ASSUMES ANY LIABILITY
# FOR THE USE OF THIS SOFTWARE.  If software is modified to produce derivative
# works, such modified software should be clearly marked, so as not to confuse it
# with the version available from LANL.
#  
# Additionally, redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
# 
# 3. Neither the name of Los Alamos National Security, LLC, Los Alamos National
# Laboratory, LANL, the U.S. Government, nor the names of its contributors may be
# used to endorse or promote products derived from this software without specific
# prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY LOS ALAMOS NATIONAL SECURITY, LLC AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL LOS ALAMOS NATIONAL SECURITY, LLC OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
# OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# -----
# NOTE:
# -----
# MarFS is released under the BSD license.
# 
# MarFS was reviewed and released by LANL under Los Alamos Computer Code identifier:
# LA-CC-15-039.
# 
# MarFS uses libaws4c for Amazon S3 object communication. The original version
# is at https://aws.amazon.com/code/Amazon-S3/2601 and under the LGPL license.
# LANL added functionality to the original work. The original work plus
# LANL contributions is found at https://github.com/jti-lanl/aws4c.
# 
# GNU licenses can be found at http://www.gnu.org/licenses/.
#

declare -A opts=( ["I_RM"]=-1 ["I_WM"]=-1 ["I_RD"]=-1 ["I_WD"]=-1 ["I_TD"]=-1 ["I_UD"]=-1 ["B_RM"]=-1 ["B_WM"]=-1 ["B_RD"]=-1 ["B_WD"]=-1 ["B_TD"]=-1 ["B_UD"]=-1 )


while [[ $# -gt 0 ]]; do
   key=$( echo $1 | cut -f 1 -d '=' )
   value=$( echo $1 | cut -f 2 -d '=' )

   if ! [[ "$key" =~ ^[IB]_([RW][DM]|[TU]D)$ ]]; then
      echo "perm_test: received an invalid argument \"$1\"" >&2
      shift
      continue
   fi
   if ! [[ "$value" =~ ^[0-1]$ ]]; then
      echo "perm_test: value for \"$key\" must be 0 or 1: received \"$value\"" >&2;
      shift
      continue
   fi

   opts["$key"]="$value"

   shift
done


for k in "${!opts[@]}"; do
   echo "K=$k   V=${opts[$k]}"
done

# This is currently just a husk
# TODO: Add proper test for each permission parameter

if [[ "${opts["I_RM"]}" != "-1" ]]; then
   #Interactive - Read Metadata
   echo "Perf I_RM";
fi

if [[ "${opts["I_RD"]}" != "-1" ]]; then
   #Interactive - Read Data
   echo "Perf I_RD";
fi

if [[ "${opts["I_WM"]}" != "-1" ]]; then
   #Interactive - Write Metadata
   echo "Perf I_WM";
fi

if [[ "${opts["I_WD"]}" != "-1" ]]; then
   #Interactive - Write Data
   echo "Perf I_WD";
fi

if [[ "${opts["I_TD"]}" != "-1" ]]; then
   #Interactive - Truncate Data
   echo "Perf I_TD";
fi

if [[ "${opts["I_UD"]}" != "-1" ]]; then
   #Interactive - Unlink Data
   echo "Perf I_UD";
fi

if [[ "${opts["B_RM"]}" != "-1" ]]; then
   #Batch - Read Metadata
   echo "Perf B_RM";
fi

if [[ "${opts["B_WM"]}" != "-1" ]]; then
   #Batch - Write Metadata
   echo "Perf B_WM";
fi

if [[ "${opts["B_RD"]}" != "-1" ]]; then
   #Batch - Read Data
   echo "Perf B_RD";
fi

if [[ "${opts["B_WD"]}" != "-1" ]]; then
   #Batch - Write Data
   echo "Perf B_WD";
fi

if [[ "${opts["B_TD"]}" != "-1" ]]; then
   #Batch - Truncate Data
   echo "Perf B_TD";
fi

if [[ "${opts["B_UD"]}" != "-1" ]]; then
   #Batch - Unlink Data
   echo "Perf B_UD";
fi


