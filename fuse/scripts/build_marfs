#!/bin/bash

# We assume the following are defined
#  AWS4C
#  PA2X
#  MARFS


# # For example:
#
# BASE=/root/jti/send.dir
# GIT=$BASE/git
#
# export AWS4C=$GIT/aws4c
# export PA2X=$GIT/PA2X
# export MARFS=$GIT/marfs


if [ -z "$AWS4C" ]; then
    echo "AWS4C undefined.  Set it to the location of your aws4c install"
    exit 1
elif [ -z "$PA2X" ]; then
    echo "PA2X undefined.  Set it to the location of your PA2X install"
    exit 1
elif [ -z "$MARFS" ]; then
    echo "MARFS undefined.  Set it to the location of your marfs install"
    exit 1
fi


# convenience
CONFIG=$MARFS/common/configuration/src
FUSE=$MARFS/fuse/src



function usage() {
    PROG=$1

    echo "build everything for marfs:  libaws4c, libconfig, libmarfs, marfs_fuse"
    echo ""
    echo "usage:  $PROG [ <code> ]"
    echo "  <code> 0  = compile -03, without logging"
    echo "  <code> 1  = compile -03, with logging to syslog"
    echo "  <code> 2  = compile -g,  with logging to syslog"
    echo "  <code> 3  = compile -g,  without logging"
    echo
}


# --- build everything for marfs:  libaws4c, libconfig, libmarfs, marfs_fuse
#     
#     usage:  build_marfs [ <code> ]
#       <code> 0/empty = compile -03, without logging
#       <code> 1       = compile -03, with logging to syslog
#       <code> 2       = compile -g,  with logging to syslog
#       <code> 3       = compile -g,  without logging

CODE=$1

case $CODE in
    0)
        CONFIG_ARGS="DEBUG=0 CONFIG=$MARFSCONFIGRC"
        FUSE_ARGS="lean"
        ;;
    1)
        CONFIG_ARGS="CONFIG=$MARFSCONFIGRC"
        FUSE_ARGS="fast"
        ;;
    2)
        AWS4C_ARGS="DEBUG=1"
        CONFIG_ARGS="DEBUG=1 CONFIG=$MARFSCONFIGRC"
        FUSE_ARGS="DEBUG=0"
        ;;
    3)
        CONFIG_ARGS="DEBUG=4 CONFIG=$MARFSCONFIGRC"
        AWS4C_ARGS="DEBUG=1"
        FUSE_ARGS="lean DEBUG=0"
        ;;
    *)
        usage $0
        exit 1;
esac

echo "FUSE_ARGS='$FUSE_ARGS'"
echo "AWS4C_ARGS='$AWS4C_ARGS'"
echo

echo
echo "### making libaws4c"
echo "### ( cd $AWS4C && make clean && make $AWS4C_ARGS )"
if ! ( cd $AWS4C && make clean && make $AWS4C_ARGS ); then
    echo "couldn't build $AWS4C"
    exit 1
fi

echo
echo "### making required PA2X directory"
echo "### ( cd $PA2X && mkdir -p parse-inc )"
if ! ( cd $PA2X && mkdir -p parse-inc ); then
    echo "couldn't mkdir -p $PA2X/parse-inc"
    exit 1
fi

echo
echo "### making libconfig"
echo "### ( cd $CONFIG && make clean && make $CONFIG_ARGS PARSE_DIR=$PA2X )"
if !( cd $CONFIG && make clean && make $CONFIG_ARGS PARSE_DIR=$PA2X ); then
    echo "couldn't build $CONFIG"
    exit 1
fi

echo
echo "### making libmarfs"
echo "### ( cd $FUSE && make clean && make $FUSE_ARGS LIBAWS4C=$AWS4C )"
if !( cd $FUSE && make clean && make $FUSE_ARGS LIBAWS4C=$AWS4C ); then
    echo "couldn't build $FUSE"
    exit 1
fi
